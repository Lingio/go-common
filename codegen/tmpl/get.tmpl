// GET {{.Path}}
func (c *LingioClient) {{.FuncName}}({{.Params}}) (*{{.RetObjType}}, *common.Error) {
    {{- if .QueryParams}}

    // Handle query parameters
	query := ""

	{{- range .QueryParams}}
	if {{ . }} != nil {
		query += fmt.Sprintf("{{ . }}=%s", *{{ . }})
	}
	{{- end}}
	if query != "" {
	    query = "?" + query
	}

	b, lerr := common.HttpGet(fmt.Sprintf("%s{{.PathTemplate}}%s", c.Server, {{.Params2}}, query))
	{{- else}}
	b, lerr := common.HttpGet(fmt.Sprintf("%s{{.PathTemplate}}", c.Server, {{.Params2}}))
	{{- end}}

	if lerr != nil {
		return nil, lerr
	}
	var x {{.RetObjType}}
	err := json.Unmarshal(b, &x)
	if err != nil {
		return nil, common.NewErrorE(http.StatusInternalServerError, err).Msg("failed to parse response")
	}
	return &x, nil
}

